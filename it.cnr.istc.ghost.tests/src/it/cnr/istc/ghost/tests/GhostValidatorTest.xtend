/*
 * generated by Xtext 2.10.0
 */
package it.cnr.istc.ghost.tests

import com.google.inject.Inject
import it.cnr.istc.ghost.ghost.Ghost
import org.eclipse.xtext.junit4.InjectWith
import org.eclipse.xtext.junit4.XtextRunner
import org.eclipse.xtext.junit4.util.ParseHelper
import org.junit.Test
import org.junit.runner.RunWith

import org.eclipse.xtext.junit4.validation.ValidationTestHelper
import it.cnr.istc.ghost.ghost.GhostPackage
import it.cnr.istc.ghost.validation.GhostValidator

@RunWith(XtextRunner)
@InjectWith(GhostInjectorProvider)
class GhostValidatorTest{

	@Inject extension ParseHelper<Ghost>
	@Inject extension ValidationTestHelper
	
	//Cyclic hierarchy tests
	
	@Test
	def void testHierarchySVSelf() {
		val model = '''
type t = sv t;
		'''.parse;
		model.assertError(GhostPackage.Literals.SV_DECL,
			GhostValidator.CYCLIC_HIERARCHY);
	}
	
	@Test
	def void testHierarchySV2() {
		val model = '''
type t1 = sv t2;
type t2 = sv t1;
		'''.parse;
		model.assertError(GhostPackage.Literals.SV_DECL,
			GhostValidator.CYCLIC_HIERARCHY);
	}
	
	@Test
	def void testHierarchySV3() {
		val model = '''
type t1 = sv t3;
type t2 = sv t1;
type t3 = sv t2;
		'''.parse;
		model.assertError(GhostPackage.Literals.SV_DECL,
			GhostValidator.CYCLIC_HIERARCHY);
	}
	
	@Test
	def void testHierarchyResSelf() {
		val model = '''
type t = resource t(10);
		'''.parse;
		model.assertError(GhostPackage.Literals.RESOURCE_DECL,
			GhostValidator.CYCLIC_HIERARCHY);
	}
	
	@Test
	def void testHierarchyRes2() {
		val model = '''
type t1 = resource t2(10);
type t2 = resource t1(20);
		'''.parse;
		model.assertError(GhostPackage.Literals.RESOURCE_DECL,
			GhostValidator.CYCLIC_HIERARCHY);
	}
	
	@Test
	def void testHierarchyRes3() {
		val model = '''
type t1 = resource t3(10);
type t2 = resource t1(20);
type t3 = resource t2(30);
		'''.parse;
		model.assertError(GhostPackage.Literals.RESOURCE_DECL,
			GhostValidator.CYCLIC_HIERARCHY);
	}
	
	
}
